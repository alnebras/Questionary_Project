// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QuestionaryProject.Data.Data;

namespace QuestionaryProject.Data.Migrations
{
    [DbContext(typeof(QuestionaryContext))]
    [Migration("20210309215819_initialMigration")]
    partial class initialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "6.0.0-preview.1.21102.2")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("QuestionaryProject.Data.Data.Models.Answers", b =>
                {
                    b.Property<int>("AnswerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AnswerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserAsnswersId")
                        .HasColumnType("int");

                    b.HasKey("AnswerId");

                    b.HasIndex("UserAsnswersId");

                    b.ToTable("Answers");

                    b.HasData(
                        new
                        {
                            AnswerId = 1,
                            AnswerName = "collection of programs that manages hardware resources"
                        },
                        new
                        {
                            AnswerId = 2,
                            AnswerName = "system service provider to the application programs"
                        },
                        new
                        {
                            AnswerId = 3,
                            AnswerName = "interface between the hardware and application programs"
                        },
                        new
                        {
                            AnswerId = 4,
                            AnswerName = "all of the mentioned"
                        },
                        new
                        {
                            AnswerId = 5,
                            AnswerName = "System calls"
                        },
                        new
                        {
                            AnswerId = 6,
                            AnswerName = "API"
                        },
                        new
                        {
                            AnswerId = 7,
                            AnswerName = "Library"
                        },
                        new
                        {
                            AnswerId = 8,
                            AnswerName = "Assembly instructions"
                        },
                        new
                        {
                            AnswerId = 9,
                            AnswerName = "kernel is the program that constitutes the central core of the operating system"
                        },
                        new
                        {
                            AnswerId = 10,
                            AnswerName = "kernel is the first part of operating system to load into memory during booting"
                        },
                        new
                        {
                            AnswerId = 11,
                            AnswerName = "kernel is made of various modules which can not be loaded in running operating system"
                        },
                        new
                        {
                            AnswerId = 12,
                            AnswerName = "kernel remains in the memory during the entire computer session"
                        });
                });

            modelBuilder.Entity("QuestionaryProject.Data.Data.Models.QuestionaryInformation", b =>
                {
                    b.Property<int>("QuestionaryInformationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("SubmissionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("QuestionaryInformationId");

                    b.ToTable("QuestionaryInformations");
                });

            modelBuilder.Entity("QuestionaryProject.Data.Data.Models.Questions", b =>
                {
                    b.Property<int>("QuestionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("QuestionName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("QuestionId");

                    b.ToTable("Questions");

                    b.HasData(
                        new
                        {
                            QuestionId = 1,
                            QuestionName = "What is an operating system?"
                        },
                        new
                        {
                            QuestionId = 2,
                            QuestionName = "To access the services of operating system, the interface is provided by the ___________"
                        },
                        new
                        {
                            QuestionId = 3,
                            QuestionName = "Which one of the following is not true?"
                        });
                });

            modelBuilder.Entity("QuestionaryProject.Data.Data.Models.UserAsnswers", b =>
                {
                    b.Property<int>("UserAsnswersId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<int>("QuestionaryInformationId")
                        .HasColumnType("int");

                    b.HasKey("UserAsnswersId");

                    b.HasIndex("QuestionId");

                    b.HasIndex("QuestionaryInformationId");

                    b.ToTable("UserAsnswers");
                });

            modelBuilder.Entity("QuestionaryProject.Data.Data.Models.Answers", b =>
                {
                    b.HasOne("QuestionaryProject.Data.Data.Models.UserAsnswers", null)
                        .WithMany("Answers")
                        .HasForeignKey("UserAsnswersId");
                });

            modelBuilder.Entity("QuestionaryProject.Data.Data.Models.UserAsnswers", b =>
                {
                    b.HasOne("QuestionaryProject.Data.Data.Models.Questions", "Question")
                        .WithMany()
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuestionaryProject.Data.Data.Models.QuestionaryInformation", "QuestionaryInformation")
                        .WithMany()
                        .HasForeignKey("QuestionaryInformationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");

                    b.Navigation("QuestionaryInformation");
                });

            modelBuilder.Entity("QuestionaryProject.Data.Data.Models.UserAsnswers", b =>
                {
                    b.Navigation("Answers");
                });
#pragma warning restore 612, 618
        }
    }
}
